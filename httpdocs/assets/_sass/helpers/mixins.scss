// mixins

@import 'functions';

// adds a box shadow to the element in focus and removes the default outline
  // $color {color} [$color: $color-yellow] box shadow color
@mixin focus($color: $color-yellow) {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 .2rem lighten($color, 15);
  }
}

// adds an angle to one or both sides of a div wrapping another element, and
// adjusts the child element's positioning inside of the div
  // $pos        {string}                  the position of the borders on the div
  // $text-pos   {string}                  the position of the text within the div
  // $bg-color   {color}                   the color of the div
  // $text-color {color}                   the color of the text within the div
  // $padding-lr {length}                  the child element's left and right padding
  // $h          {length}                  the height of the div and the triangle at its end(s)
  // $w          {length} [$w: $h]         the width of the triangle at the div's end(s)
  // $padding-tb {length} [$padding-tb: 0] the child element's top and bottom padding
@mixin slant($pos, $text-pos, $bg-color, $text-color, $padding-lr, $h, $w: $h, $padding-tb: 0) {
  position: relative;
  color: $text-color;
  @if $pos == '' {
    @error 'missing value for $pos';
  } @else {
    $split: str-split($pos);

    @each $char in $split {
      @if $char == 't' {
        border-top: $h solid $bg-color;
      } @else if $char == 'b' {
        border-bottom: $h solid $bg-color;
      } @else if $char == 'r' {
        border-right: $w solid transparent;
      } @else if $char == 'l' {
        border-left: $w solid transparent;
      } @else {
        @error 'invalid value for $pos';
      }
    }
  }

  & > *:first-child {
    position: absolute;
    margin: 0;
    padding: $padding-tb $padding-lr;
    $yLength: calc(-.5 * #{$h} - 50%);
    width: 100%;

    @if $padding-tb != 0 {
      height: $h;
    }

    @if str-index($pos, 'b') {
      $yLength: calc(.5 * #{$h} + 50%);
    }

    // text position
    @if str-index($pos, 't') {
      top: 0;
    } @else if str-index($pos, 'b') {
      bottom: 0;
    }
    @if $text-pos == 'center' {
      left: 50%;
      transform: translate(-50%, $yLength);
    } @else if $text-pos == 'left' {
      left: $w;
      transform: translate(-#{$w}, $yLength);
    } @else if $text-pos == 'right' {
      right: -$w;
      transform: translate(-#{$w}, $yLength);
    } @else {
      @error 'invalid value for $text-pos';
    }
  }
}
